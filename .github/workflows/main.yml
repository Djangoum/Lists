name: lists-api

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Publish
      run: go build -ldflags "-s -w" -o "publish/bin"

    - uses: actions/upload-artifact@v2
      with:
        name: api-binaries
        path: publish

    - uses: actions/upload-artifact@v2
      with:
        name: terraform-files
        path: deploy/terraform

  plan_terraform:
    environment: prod 
    needs: build
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - name: Download a single artifact
      uses: actions/download-artifact@v2
      with:
        name: terraform-files
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v2.0.0
      with:
          version: 0.14.3
    - name: Terraform init
      run: |
        terraform init

    - name: Terraform select workspace
      run: | 
        terraform workspace select prod
    
    - name: Terraform plan
      run: |
        terraform plan

  apply_terraform:
    environment: prod 
    needs: plan_terraform
    name: Terraform Apply
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
    - name: Download a terraform files
      uses: actions/download-artifact@v2
      with:
        name: terraform-files
    - name: Install Terraform
      uses: little-core-labs/install-terraform@v2.0.0
      with:
          version: 0.14.3
    - name: Terraform init
      run: |
        terraform init

    - name: Terraform select workspace
      run: | 
        terraform workspace select prod
    
    - name: Terraform apply
      run: |
        terraform apply --auto-approve=true

    - name: Teraform Output export
      run: |
        terraform output -json > output.json

    - uses: actions/upload-artifact@v2
      name: Upload Terraform Output artifact
      with:
        name: terraform-outputs
        path: output.json

  deploy_app:
    environment: prod
    needs: apply_terraform
    name: Deploy prod
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Download application binaries
        uses: actions/download-artifact@v2
        with:
          name: api-binaries

      - name: Download terraform outputs
        uses: actions/download-artifact@v2
        with:
          name: terraform-outputs

      - name: Read terraform outputs
        id: terraforms_outputs
        run: |
          echo "::set-output name=app_name::jq -r 'app-environment_name'"
          echo "::set-output name=environment_name::jq -r 'environment_name'"

      - name: Zip Binaries
        run: zip -r release.zip ./bin

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ steps.terraforms_outputs.outputs.app_name }}
          environment_name: ${{ steps.terraforms_outputs.outputs.environment_name }}
          version_label: 1
          region: eu-west-3
          deployment_package: release.zip